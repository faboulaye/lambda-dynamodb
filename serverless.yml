service: api-posts

provider:
  name: aws
  stage: dev
  region: eu-west-1
  runtime: nodejs12.x
  timeout: 30
  environment:
    POSTS_TABLE: "posts"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:provider.environment.POSTS_TABLE}

package:
  exclude:
    - node_modules

functions:
  create:
    handler: handler.create
    events:
      - http:
          path: /posts
          method: post
  update:
    handler: handler.update
    events:
      - http:
          path: /posts/{id}
          method: put
  delete:
    handler: handler.delete
    events:
      - http:
          path: /posts/{id}
          method: delete
  get:
    handler: handler.get
    events:
      - http:
          path: /posts/{id}
          method: get
  list:
    handler: handler.list
    events:
      - http:
          path: /posts
          method: get

resources:
  Resources:
    PostTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.POSTS_TABLE}
